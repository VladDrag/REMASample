trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '4eeaf9bc-2832-49c6-8fa2-dcedcd990e08'
  webAppName: 'RemaSampleApp2'
  remaService: 'RemaService2'
  appServicePlan: 'CatServicePlan'

steps:
#Install the Go version
- task: GoTool@0
  displayName: 'Install Go'
  inputs:
    version: '1.17.x'

- task: Go@0
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: Go@0
#Build the Golang application in the REMASample directory
  displayName: 'Build Go application'
  inputs:
    command: 'build'
    arguments: '-o bin/remasample'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: Bash@3
  displayName: Folder Structure
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
                echo "Structure of work folder of this pipeline:"
                tree $(Agent.WorkFolder)/1
      
                echo "Build.ArtifactStagingDirectory:" 
                echo "$(Build.ArtifactStagingDirectory)"

                echo "System.DefaultWorkingDirectory:"
                echo "ls -lrt $(System.DefaultWorkingDirectory)"
      
                echo "Build.BinariesDirectory:" 
                echo "$(Build.BinariesDirectory)"

                echo "Build.Repository.LocalPath:"
                echo "$(Build.Repository.LocalPath)"
      
                echo "Build.SourcesDirectory:"
                echo "$(Build.SourcesDirectory)"
                tree "$(Build.SourcesDirectory)"
                echo "ls -lrt /home/vsts/work/1/s/bin/remasample"

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/remasample.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/'
    ArtifactName: 'remasample'
    publishLocation: 'Container'



# - task: AzureCLI@2
# #Restart the Web App to apply the changes 
#   displayName: 'Create Service'
#   inputs:
#     azureSubscription: '4eeaf9bc-2832-49c6-8fa2-dcedcd990e08'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript:
#       az appservice plan create --name $(remaService) --resource-group CATDemo --sku B1

# - task: AzureCLI@2
# #Restart the Web App to apply the changes 
#   displayName: 'Create Web App'
#   inputs:
#     azureSubscription: '4eeaf9bc-2832-49c6-8fa2-dcedcd990e08'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript:
#       az webapp create --name $(webAppName) --resource-group CATDemo --plan $(remaService)

# - task: AzureWebApp@1
#   inputs:
#     azureSubscription: '4eeaf9bc-2832-49c6-8fa2-dcedcd990e08'
#     appType: 'webAppLinux'
#     appName: '$(webAppName)'
#     startUpCommand: 'go'

- task: Bash@3
  displayName: Folder Structure final
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
                echo "Structure of work folder of this pipeline:"
                tree $(Agent.WorkFolder)/1
      
                echo "Build.ArtifactStagingDirectory:" 
                echo "$(Build.ArtifactStagingDirectory)"
      
                echo "Build.BinariesDirectory:" 
                echo "$(Build.BinariesDirectory)"
      
                echo "Build.SourcesDirectory:"
                echo "$(Build.SourcesDirectory)"
                tree "$(Build.SourcesDirectory)"
                echo "ls -lrt /home/vsts/work/1/s/bin/remasample"



- task: AzureWebApp@1
#Deploy the built binary to the Azure Web App specified by the webAppName variable, using the AzureWebApp task.
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'webApp'
    appName: '$(webAppName)'
    package: '$(Build.ArtifactStagingDirectory)/bin/*.zip'
    deploymentMethod: 'runFromPackage'

# - task: AzureCLI@2
# #Restart the Web App to apply the changes 
#   displayName: 'Restart Web App'
#   inputs:
#     azureSubscription: $(azureSubscription)
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: 'az webapp restart --name $(webAppName) --resource-group $(appServicePlan)'
